/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.angile.view;

import javax.swing.table.DefaultTableModel;

import com.angile.Service.ThemeServicesImpl;
import com.angile.model.TbTheme;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;

import javax.swing.JButton;
import javax.swing.JOptionPane;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JMenuItem;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.ImageIcon;

/**
 *
 * @author Tuan Khai
 */
@SuppressWarnings("all")
public class ThemeManager extends javax.swing.JFrame {

	/**
	 * Creates new form AuthorManager
	 */
	DefaultTableModel model = new DefaultTableModel();
	ThemeServicesImpl themeServicesImpl = new ThemeServicesImpl();
	private int flag = 0;

	public ThemeManager() {
		initComponents();
		initFrame();
		showDataIntoTableTheme();
	}

	void initFrame() {
		tfCodeTheme.setEnabled(false);
		tfNameTheme.setEnabled(false);
		btnEdit.setEnabled(false);
		btnBoqua.setEnabled(false);
		btnSave.setEnabled(false);
		btnDelete.setEnabled(false);
	}

	void showDataIntoTableTheme() {
		model = (DefaultTableModel) tblTheme.getModel();
		model.setRowCount(0);
		for (TbTheme x : themeServicesImpl.getTheme(0, 10)) {
			model.addRow(new Object[] { x.getId(), x.getNameTheme() });

		}
	}

	void getThemeById(int id_theme) {
		TbTheme theme = themeServicesImpl.showThemeById(id_theme);
		tfCodeTheme.setText(theme.getId() + "");
		tfNameTheme.setText(theme.getNameTheme());

	}

	void clearForm() {
		tfCodeTheme.setText(null);
		tfNameTheme.setText(null);
	}

	void switchEmnable(boolean dieukien) {
		tfNameTheme.setEnabled(dieukien);
	}

	String addTheme(String name) {
		String result = null;
		if (name.equals("")) {
			JOptionPane.showMessageDialog(null, "Tên chủ đề không được rỗng");
		} else {
			if (themeServicesImpl.addTheme(name) == true) {
				showDataIntoTableTheme();
				clearForm();
				JOptionPane.showMessageDialog(null, "Thêm Chủ Đề Thành Công");
			} else {
				JOptionPane.showMessageDialog(null, "Lỗi trong quá trình thêm");
			}

		}
		return result;
	}

	void updateTheme(int id_theme, String name) {

		if (themeServicesImpl.editTheme(id_theme, name)) {
			JOptionPane.showMessageDialog(null, "Cập nhập thàng công");
			showDataIntoTableTheme();
			initFrame();

		} else {
			JOptionPane.showMessageDialog(null, "Lỗi trong quá trình cập nhập");
		}
	}

	String deleteTheme(int id_theme) {
		String result = null;
		if (themeServicesImpl.removeTheme(id_theme)) {
			JOptionPane.showMessageDialog(null, "Xóa thành công");
			showDataIntoTableTheme();
			clearForm();
		} else {
			JOptionPane.showMessageDialog(null, "Lỗi trong quá trình xóa");
		}
		return result;

	}
	void searchTheme(String name)
	{
		TbTheme theme = themeServicesImpl.searchTheme(name);
		if(theme!=null)
		{
			tfCodeTheme.setText(theme.getId()+"");
			tfNameTheme.setText(theme.getNameTheme());
		}else
		{
			JOptionPane.showMessageDialog(null, "Không tìm thấy chủ đề");
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jButton6 = new javax.swing.JButton();
		btnAdd = new javax.swing.JButton();
		btnAdd.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\btn_add.png"));
		btnEdit = new javax.swing.JButton();
		btnEdit.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\edit.png"));
		btnEdit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				switchEmnable(true);
				btnBoqua.setEnabled(true);
				btnSave.setEnabled(true);
				flag = 2;
			}
		});
		btnDelete = new javax.swing.JButton();
		btnDelete.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\btn_delete.png"));
		btnDelete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa không") == 0) {
					deleteTheme((Integer) tblTheme.getValueAt(tblTheme.getSelectedRow(), 0));
				}

			}
		});
		btnBoqua = new javax.swing.JButton();
		btnBoqua.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\btn_exit.png"));
		btnBoqua.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (flag == 1) {
					switchEmnable(false);
					btnSave.setEnabled(false);
					btnBoqua.setEnabled(false);
				} else if (flag == 2) {
					switchEmnable(false);
					btnSave.setEnabled(false);
					btnBoqua.setEnabled(false);

				}
			}
		});
		btnSave = new javax.swing.JButton();
		btnSave.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\btn_save.png"));
		btnSave.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (flag == 1) {
					addTheme(tfNameTheme.getText());
				} else if (flag == 2) {
					if (!tfNameTheme.getText().equals("")) {
						updateTheme((Integer) tblTheme.getValueAt(tblTheme.getSelectedRow(), 0), tfNameTheme.getText());
					} else {
						JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên chủ đề");
					}

				}

			}
		});
		btnExport = new javax.swing.JButton();
		btnExport.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\Transfer.png"));
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		tfCodeTheme = new javax.swing.JTextField();
		tfNameTheme = new javax.swing.JTextField();
		tfSearchTheme = new javax.swing.JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		tblTheme = new javax.swing.JTable();
		tblTheme.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				getThemeById((Integer) tblTheme.getValueAt(tblTheme.getSelectedRow(), 0));
				tfNameTheme.setEnabled(false);
				btnEdit.setEnabled(true);
				btnDelete.setEnabled(true);
				btnSave.setEnabled(false);
				btnBoqua.setEnabled(false);
			}
		});
		btnSearch = new javax.swing.JButton();
		btnSearch.setIcon(new ImageIcon("D:\\Angile Quan Ly Thu Vien\\AngileLibrary\\Icon\\btn_search.png"));
		btnSearch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if(tfSearchTheme.getText().equals(""))
				{
					JOptionPane.showMessageDialog(null,"Bạn chưa nhập từ khóa");
				}else {
					searchTheme(tfSearchTheme.getText());
				}
			}
		});
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenuItem2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		jMenuItem3 = new javax.swing.JMenuItem();
		jMenuItem3.addActionListener(/**
										 * @author Tuan Khai
										 *
										 */
				new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						AuthorManager authorManager = new AuthorManager();
						ThemeManager themeManager = new ThemeManager();
						themeManager.setVisible(false);
						themeManager.setVisible(true);
					}
				});
		jMenuItem3.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
			}
		});
		jMenu2 = new javax.swing.JMenu();
		jMenu2.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
			}
		});

		jButton6.setText("jButton6");

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Quản Lý Chủ Đề");

		btnAdd.setText("Thêm");
		btnAdd.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		btnEdit.setText("Sửa");

		btnDelete.setText("Xóa");

		btnBoqua.setText("Bỏ Qua");

		btnSave.setText("Lưu");

		btnExport.setText("Kiết Xuất");
		btnExport.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				try {
					jButton7ActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		jLabel1.setText("Mã Chủ Đề");

		jLabel2.setText("Tên Chủ Đề");

		jLabel3.setText("Tìm Kiếm");

		jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
		jLabel4.setText("Quản Lý Chủ Đề");

		tblTheme.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { null, null } },
				new String[] { "ID", "Tên Chủ Đề" }));
		jScrollPane1.setViewportView(tblTheme);

		btnSearch.setText("Tìm Kiếm");

		jMenu1.setText("Chức Năng");

		jMenuItem1.setText("Quản Lý Sách");
		jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem1ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem1);

		jMenuItem2.setText("Quản Lý Nhà Xuất Bản");
		jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jMenuItem2ActionPerformed(evt);
			}
		});
		jMenu1.add(jMenuItem2);

		jMenuItem3.setText("Quản Lý Tác Giả");
		jMenu1.add(jMenuItem3);

		jMenuBar1.add(jMenu1);

		jMenu2.setText("Đăng Xuất");
		jMenuBar1.add(jMenu2);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap(379, Short.MAX_VALUE)
					.addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
					.addGap(159))
				.addGroup(layout.createSequentialGroup()
					.addGap(27)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup()
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addGroup(layout.createSequentialGroup()
									.addGroup(layout.createParallelGroup(Alignment.LEADING)
										.addComponent(jLabel2)
										.addComponent(jLabel1))
									.addGap(108)
									.addGroup(layout.createParallelGroup(Alignment.TRAILING)
										.addGroup(Alignment.LEADING, layout.createSequentialGroup()
											.addComponent(tfSearchTheme, GroupLayout.PREFERRED_SIZE, 185, GroupLayout.PREFERRED_SIZE)
											.addGap(18)
											.addComponent(btnSearch, GroupLayout.PREFERRED_SIZE, 97, Short.MAX_VALUE))
										.addComponent(tfNameTheme, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
										.addComponent(tfCodeTheme, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
									.addGap(18))
								.addGroup(layout.createSequentialGroup()
									.addComponent(jLabel3)
									.addPreferredGap(ComponentPlacement.RELATED, 440, Short.MAX_VALUE)))
							.addGap(28)
							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
								.addGroup(layout.createParallelGroup(Alignment.LEADING)
									.addComponent(btnAdd, GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
									.addComponent(btnEdit, GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
								.addComponent(btnExport))
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
								.addComponent(btnSave, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnBoqua, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(btnDelete, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup()
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addComponent(jLabel4)
					.addGap(25)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
						.addComponent(tfCodeTheme, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(btnAdd)
						.addComponent(btnDelete))
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addGap(15)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(tfNameTheme, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2))
							.addGap(18)
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addComponent(jLabel3)
								.addGroup(layout.createParallelGroup(Alignment.BASELINE)
									.addComponent(tfSearchTheme, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
									.addComponent(btnSearch))))
						.addGroup(layout.createSequentialGroup()
							.addGap(18)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(btnEdit)
								.addComponent(btnSave))
							.addPreferredGap(ComponentPlacement.UNRELATED)
							.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(btnBoqua)
								.addComponent(btnExport))))
					.addGap(18)
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 208, GroupLayout.PREFERRED_SIZE)
					.addGap(75))
		);
		getContentPane().setLayout(layout);

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem1ActionPerformed
		this.setVisible(false);
		BookManager bookManager = new BookManager();
		bookManager.setVisible(true);

	}// GEN-LAST:event_jMenuItem1ActionPerformed

	private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenuItem2ActionPerformed
		// TODO add your handling code here:
		this.setVisible(false);
		PublishingManager publishingManager = new PublishingManager();
		publishingManager.setVisible(true);

	}// GEN-LAST:event_jMenuItem2ActionPerformed

	private void logOut(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jMenuItem2ActionPerformed
		// TODO add your handling code here:
		this.setVisible(false);
		LoginJframe loginJframe = new LoginJframe();
		loginJframe.setVisible(true);
	}// GEN-LAST:event_jMenuItem2ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		switchEmnable(true);
		clearForm();
		btnSave.setEnabled(true);
		btnBoqua.setEnabled(true);
		btnEdit.setEnabled(false);
		btnDelete.setEnabled(false);
		flag = 1;
	}// GEN-LAST:event_jButton1ActionPerformed

	private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {// GEN-FIRST:event_jButton7ActionPerformed
		// TODO add your handling code here:
		themeServicesImpl.exportExcel();
	}// GEN-LAST:event_jButton7ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ThemeManager.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ThemeManager.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ThemeManager.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ThemeManager.class.getName()).log(java.util.logging.Level.SEVERE, null,
					ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ThemeManager().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAdd;
	private javax.swing.JButton btnEdit;
	private javax.swing.JButton btnDelete;
	private javax.swing.JButton btnBoqua;
	private javax.swing.JButton btnSave;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton btnExport;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JMenu jMenu1;
	private javax.swing.JMenu jMenu2;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JMenuItem jMenuItem3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable tblTheme;
	private javax.swing.JTextField tfCodeTheme;
	private javax.swing.JTextField tfNameTheme;
	private javax.swing.JTextField tfSearchTheme;
	private JButton btnSearch;
	// End of variables declaration//GEN-END:variables
}
